services:
  ctx:
    image: alpine
    volumes:
      - .:/app
    command: /app/init.sh

  db:
    depends_on:
      ctx:
        condition: service_completed_successfully
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - "./database/scripts:/docker-entrypoint-initdb.d:Z"
      - "./database/data:/var/lib/postgresql/data:Z"
    healthcheck: 
      interval: 10s
      retries: 10
      test: "pg_isready -U \"$$POSTGRES_USER\" -d \"$$POSTGRES_DB\""
      timeout: 2s

  pgadmin:
    depends_on:
      db:
        condition: service_healthy
      ctx:
        condition: service_completed_successfully
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    user: root
    volumes:
      - "./database/pgadmin_data:/var/lib/pgadmin:Z"
    ports:
      - "8420:80"

  nocodb:
    depends_on:
      db:
        condition: service_healthy
    image: nocodb/nocodb:latest
    restart: always
    environment:
      NC_DB: "pg://db:5432?u=${POSTGRES_USER}&p=${POSTGRES_PASSWORD}&d=nocodb"
      NC_AUTH_JWT_SECRET: "569a1821-0a93-45e8-87ab-eb857f20a010"
    volumes:
      - "./database/nocodb:/usr/app/data:Z"
    ports:
      - "8440:8080"

  app:
    build: .
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              device_ids: ['0']
              capabilities: [gpu]
